{"version":3,"sources":["turbopack:///[project]/src/lib/scraper.ts","turbopack:///[project]/src/app/api/get-slots/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { chromium } from 'playwright';\n\nexport interface SlotData {\n  date: string;\n  time: string;\n  gmt: string;\n}\n\nexport interface ScrapingResult {\n  success: boolean;\n  data?: {\n    total_slots: number;\n    total_days: number;\n    note: string;\n    slots: SlotData[];\n  };\n  error?: string;\n}\n\nexport class ChiliPiperScraper {\n  private baseUrl = \"https://cincpro.chilipiper.com/concierge-router/link/lp-request-a-demo-agent-advice\";\n\n  async scrapeSlots(\n    firstName: string,\n    lastName: string,\n    email: string,\n    phone: string\n  ): Promise<ScrapingResult> {\n    try {\n      console.log(`üéØ Starting scrape for ${firstName} ${lastName} (${email})`);\n      \n      const browser = await chromium.launch({\n        headless: true,\n        args: [\n          '--no-sandbox',\n          '--disable-dev-shm-usage',\n          '--disable-gpu',\n          '--disable-web-security',\n          '--disable-features=VizDisplayCompositor',\n          '--disable-background-timer-throttling',\n          '--disable-backgrounding-occluded-windows',\n          '--disable-renderer-backgrounding',\n          '--disable-extensions',\n          '--disable-sync',\n          '--disable-default-apps',\n          '--hide-scrollbars',\n          '--mute-audio',\n          '--no-first-run',\n          '--no-default-browser-check',\n          '--disable-hang-monitor',\n          '--disable-prompt-on-repost',\n          '--disable-breakpad',\n          '--disable-features=site-per-process',\n          '--disable-site-isolation-trials',\n          '--disable-blink-features=AutomationControlled',\n          '--disable-infobars',\n          '--window-size=1280,720'\n        ]\n      });\n\n      const page = await browser.newPage();\n      \n      // Optimize page settings\n      page.setDefaultNavigationTimeout(60000);\n      await page.route(\"**/*\", (route) => {\n        if (route.request().resourceType() === \"image\" || \n            route.request().resourceType() === \"stylesheet\" || \n            route.request().resourceType() === \"font\") {\n          route.abort();\n        } else {\n          route.continue();\n        }\n      });\n\n      console.log(`Navigating to: ${this.baseUrl}`);\n      await page.goto(this.baseUrl, { waitUntil: 'domcontentloaded' });\n      \n      // Wait for page to load completely\n      await page.waitForTimeout(2000);\n      \n      // Try multiple selectors for form fields\n      console.log(\"üîç Looking for form fields...\");\n      \n      // Try different selectors for First Name (based on actual Chili Piper form)\n      const firstNameSelectors = [\n        '[data-test-id=\"GuestFormField-PersonFirstName\"]',\n        'textbox[aria-label=\"First Name\"]',\n        'input[aria-label=\"First Name\"]',\n        'textbox:has-text(\"First Name\")',\n        'input:has-text(\"First Name\")',\n        'input[name=\"FirstName\"]',\n        'input[name=\"first_name\"]',\n        'input[name=\"firstName\"]',\n        'input[placeholder*=\"First\"]',\n        'input[placeholder*=\"first\"]',\n        'input[id*=\"first\"]',\n        'input[id*=\"First\"]'\n      ];\n      \n      const lastNameSelectors = [\n        '[data-test-id=\"GuestFormField-PersonLastName\"]',\n        'textbox[aria-label=\"Last Name\"]',\n        'input[aria-label=\"Last Name\"]',\n        'textbox:has-text(\"Last Name\")',\n        'input:has-text(\"Last Name\")',\n        'input[name=\"LastName\"]',\n        'input[name=\"last_name\"]',\n        'input[name=\"lastName\"]',\n        'input[placeholder*=\"Last\"]',\n        'input[placeholder*=\"last\"]',\n        'input[id*=\"last\"]',\n        'input[id*=\"Last\"]'\n      ];\n      \n      const emailSelectors = [\n        '[data-test-id=\"GuestFormField-PersonEmail\"]',\n        'textbox[aria-label=\"Email\"]',\n        'input[aria-label=\"Email\"]',\n        'textbox:has-text(\"Email\")',\n        'input:has-text(\"Email\")',\n        'input[name=\"Email\"]',\n        'input[name=\"email\"]',\n        'input[type=\"email\"]',\n        'input[placeholder*=\"email\"]',\n        'input[placeholder*=\"Email\"]',\n        'input[id*=\"email\"]',\n        'input[id*=\"Email\"]'\n      ];\n      \n      const phoneSelectors = [\n        '[data-test-id=\"PhoneField-input\"]',\n        'textbox[aria-label=\"Phone number\"]',\n        'input[aria-label=\"Phone number\"]',\n        'textbox:has-text(\"Phone number\")',\n        'input:has-text(\"Phone number\")',\n        'input[name=\"Phone\"]',\n        'input[name=\"phone\"]',\n        'input[name=\"PhoneNumber\"]',\n        'input[name=\"phone_number\"]',\n        'input[type=\"tel\"]',\n        'input[placeholder*=\"phone\"]',\n        'input[placeholder*=\"Phone\"]',\n        'input[id*=\"phone\"]',\n        'input[id*=\"Phone\"]'\n      ];\n      \n      // Fill form fields with fallback selectors\n      await this.fillFieldWithFallback(page, firstNameSelectors, firstName, 'First Name');\n      await this.fillFieldWithFallback(page, lastNameSelectors, lastName, 'Last Name');\n      await this.fillFieldWithFallback(page, emailSelectors, email, 'Email');\n      await this.fillFieldWithFallback(page, phoneSelectors, phone, 'Phone');\n      \n      // Click the submit button with fallback selectors\n      const submitSelectors = [\n        'button[type=\"submit\"]',\n        'input[type=\"submit\"]',\n        'button:has-text(\"Submit\")',\n        'button:has-text(\"Continue\")',\n        'button:has-text(\"Next\")',\n        'button:has-text(\"Book\")',\n        'button:has-text(\"Schedule\")',\n        '[data-testid*=\"submit\"]',\n        '[data-testid*=\"continue\"]',\n        '.submit-button',\n        '.continue-button'\n      ];\n      \n      let submitClicked = false;\n      for (const selector of submitSelectors) {\n        try {\n          console.log(`üîç Trying submit selector: ${selector}`);\n          await page.waitForSelector(selector, { timeout: 2000 });\n          await page.click(selector);\n          console.log(`‚úÖ Successfully clicked submit button using selector: ${selector}`);\n          submitClicked = true;\n          break;\n        } catch (error) {\n          console.log(`‚ùå Submit selector failed: ${selector}`);\n          continue;\n        }\n      }\n      \n      if (!submitClicked) {\n        throw new Error('Could not find submit button with any of the provided selectors');\n      }\n      \n      console.log(\"Form submitted successfully\");\n      \n          // Wait longer for the calendar page to load and adjust\n          console.log(\"‚è≥ Waiting 5 seconds for calendar to fully load...\");\n          await page.waitForTimeout(5000);\n          console.log(\"‚úÖ Calendar should be fully loaded now\");\n      \n      // Wait for calendar elements with multiple possible selectors\n      const calendarSelectors = [\n        'button:has-text(\"Monday\")',\n        'button:has-text(\"Tuesday\")',\n        'button:has-text(\"Wednesday\")',\n        'button:has-text(\"Thursday\")',\n        'button:has-text(\"Friday\")',\n        '[data-test-id*=\"calendar\"]',\n        '[data-test-id*=\"day\"]',\n        '[data-id=\"calendar-day-button\"]'\n      ];\n      \n      let calendarFound = false;\n      for (const selector of calendarSelectors) {\n        try {\n          await page.waitForSelector(selector, { timeout: 10000 }); // Increased from 2000ms to 10000ms\n          console.log(`‚úÖ Calendar loaded successfully using selector: ${selector}`);\n          calendarFound = true;\n          break;\n        } catch (error) {\n          console.log(`‚ùå Calendar selector failed: ${selector}`);\n          continue;\n        }\n      }\n      \n      if (!calendarFound) {\n        throw new Error('Could not find calendar elements with any of the provided selectors');\n      }\n\n      const slots = await this.getAvailableSlots(page);\n      \n      await browser.close();\n      \n      // Flatten the slots into the requested format\n      const flattenedSlots: SlotData[] = [];\n      for (const [dateKey, dayInfo] of Object.entries(slots)) {\n        for (const timeSlot of dayInfo.slots) {\n          flattenedSlots.push({\n            date: dateKey,\n            time: timeSlot,\n            gmt: 'GMT-05:00 America/Chicago (CDT)'\n          });\n        }\n      }\n\n      const result: ScrapingResult = {\n        success: true,\n        data: {\n          total_slots: flattenedSlots.length,\n          total_days: Object.keys(slots).length,\n          note: `Found ${Object.keys(slots).length} days with ${flattenedSlots.length} total booking slots`,\n          slots: flattenedSlots\n        }\n      };\n\n      console.log(`‚úÖ Scraping completed successfully: ${flattenedSlots.length} slots across ${Object.keys(slots).length} days`);\n      return result;\n\n    } catch (error) {\n      console.error('Scraping error:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\n      };\n    }\n  }\n\n  private async fillFieldWithFallback(page: any, selectors: string[], value: string, fieldName: string): Promise<void> {\n    for (const selector of selectors) {\n      try {\n        console.log(`üîç Trying selector for ${fieldName}: ${selector}`);\n        await page.waitForSelector(selector, { timeout: 2000 });\n        await page.fill(selector, value);\n        console.log(`‚úÖ Successfully filled ${fieldName} using selector: ${selector}`);\n        return;\n      } catch (error) {\n        console.log(`‚ùå Selector failed for ${fieldName}: ${selector}`);\n        continue;\n      }\n    }\n    throw new Error(`Could not find ${fieldName} field with any of the provided selectors`);\n  }\n\n  private async getAvailableSlots(page: any): Promise<Record<string, { slots: string[] }>> {\n    const allSlots: Record<string, { slots: string[] }> = {};\n    \n    console.log(\"üöÄ Starting comprehensive slot collection\");\n    console.log(\"üéØ Goal: Collect ALL available booking days (9+ days)\");\n    console.log(\"üìã Strategy: Emulate manual browser process - collect all days from current view, then navigate\");\n\n    // Simple approach: collect from Week 1, navigate to Week 2, collect from Week 2\n    const maxAttempts = 3;\n    \n    for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n      console.log(`\\n=====================================`);\n      console.log(`=== COLLECTION ATTEMPT ${attempt}/${maxAttempts} ===`);\n      console.log(`üìä Current total: ${Object.keys(allSlots).length} days`);\n      \n      // Stop if we have enough\n      if (Object.keys(allSlots).length >= 9) {\n        console.log(`üéØ Target reached! Stopping collection.`);\n        break;\n      }\n      \n      console.log(`‚è≥ Waiting for calendar to be ready...`);\n      await page.waitForTimeout(1000); // Give calendar time to stabilize\n      \n      // Get ALL enabled day buttons from the current calendar view (Week 1 AND Week 2)\n      const dayButtons = await this.getAllEnabledDayButtons(page);\n      console.log(`üìÖ Found ${dayButtons.length} total enabled day buttons in current view`);\n      \n      // Log the date keys to see what we're getting\n      const dateKeys = dayButtons.map(db => db.dateKey);\n      console.log(`üìã Button dates: ${dateKeys.join(', ')}`);\n      \n      if (dayButtons.length === 0) {\n        console.log(\"‚ùå No enabled day buttons found. This is unexpected.\");\n        break;\n      }\n\n      // Process ALL enabled day buttons (this collects both weeks at once!)\n      let newDaysAdded = 0;\n      for (const buttonInfo of dayButtons) {\n        try {\n          const dateKey = buttonInfo.dateKey;\n          \n          // Skip if we already have this date\n          if (allSlots[dateKey]) {\n            console.log(`‚è≠Ô∏è Skipping ${dateKey} - already collected`);\n            continue;\n          }\n          \n          // Click the button to see its slots\n          console.log(`üñ±Ô∏è Clicking ${dateKey}...`);\n          await buttonInfo.button.click();\n          await page.waitForTimeout(1000);\n          \n          // Get time slots for this day\n          const slots = await this.getTimeSlotsForCurrentDay(page);\n          console.log(`üìä Got ${slots.length} slots for ${dateKey}`);\n          \n          if (slots.length > 0) {\n            allSlots[dateKey] = { slots };\n            newDaysAdded++;\n            console.log(`‚úÖ Added ${dateKey}: ${slots.length} slots (total days: ${Object.keys(allSlots).length})`);\n          }\n          \n          // Stop if we have enough days\n          if (Object.keys(allSlots).length >= 9) {\n            console.log(`üéØ Target reached! Collected ${Object.keys(allSlots).length} days.`);\n            break;\n          }\n        } catch (error) {\n          console.log(`‚ùå Error processing day button: ${error}`);\n          continue;\n        }\n      }\n      \n      console.log(`üìä Progress: ${Object.keys(allSlots).length} total days collected (${newDaysAdded} new from this attempt)`);\n      \n      // If we have enough days or didn't add any new ones, stop\n      if (Object.keys(allSlots).length >= 9 || newDaysAdded === 0) {\n        console.log(`‚úÖ Collection complete. Total days: ${Object.keys(allSlots).length}`);\n        break;\n      }\n      \n      // If we still don't have enough days, navigate to next week\n      if (Object.keys(allSlots).length < 9) {\n        console.log(`üîÑ Only have ${Object.keys(allSlots).length} days (target: 9). Navigating to next week...`);\n        \n        const navSuccess = await this.navigateToNextWeek(page);\n        console.log(`üß≠ Navigation result: ${navSuccess}`);\n        \n        if (navSuccess) {\n          console.log(`‚è≥ Waiting 5 seconds for calendar to update...`);\n          await page.waitForTimeout(5000);\n          console.log(`‚úÖ Calendar updated, will continue in next iteration`);\n        } else {\n          console.log(`‚ùå Navigation failed or button disabled. Collected ${Object.keys(allSlots).length} days total.`);\n          break;\n        }\n      }\n    }\n    \n    console.log(`üèÅ Final result: Successfully collected ${Object.keys(allSlots).length} days`);\n    console.log(`üìã Collected dates: ${Object.keys(allSlots).join(', ')}`);\n    \n    if (Object.keys(allSlots).length === 0) {\n      console.warn(\"‚ö†Ô∏è No available booking slots found in any week\");\n      console.info(\"üí° This could mean the calendar has no available slots or the page structure changed\");\n    } else {\n      console.info(`‚úÖ Found ${Object.keys(allSlots).length} days with available booking slots`);\n    }\n\n    return allSlots;\n  }\n\n  private async getAllEnabledDayButtons(page: any): Promise<Array<{ button: any; dateKey: string }>> {\n    const enabledButtons: Array<{ button: any; dateKey: string }> = [];\n    \n    console.log(`üîç getAllEnabledDayButtons() starting...`);\n    \n    // Wait for day buttons - use a broader selector\n    try {\n      console.log(`‚è≥ Waiting for 'button[data-test-id*=\"days:Oct\"]' selector...`);\n      await page.waitForSelector('button[data-test-id*=\"days:Oct\"]', { timeout: 5000 });\n      console.log(`‚úÖ Found Oct buttons`);\n    } catch (error) {\n      console.log(`‚ö†Ô∏è Oct buttons not found, trying any day buttons...`);\n      try {\n        await page.waitForSelector('button[data-test-id*=\"days:\"]', { timeout: 2000 });\n        console.log(`‚úÖ Found any day buttons`);\n      } catch (error2) {\n        console.log(`‚ùå No day buttons found with any selector`);\n        return enabledButtons;\n      }\n    }\n    \n    // Wait a moment for calendar to stabilize\n    await page.waitForTimeout(500);\n    \n    // Get all day buttons\n    console.log(`üîç Querying all day buttons with selector 'button[data-test-id*=\"days:\"]'...`);\n    const dayButtons = await page.$$('button[data-test-id*=\"days:\"]');\n    console.log(`üìä Total day buttons found: ${dayButtons.length}`);\n    \n    for (let i = 0; i < dayButtons.length; i++) {\n      try {\n        const button = dayButtons[i];\n        const isEnabled = await button.isEnabled();\n        const buttonText = await button.textContent();\n        \n        console.log(`üîç Button ${i + 1}: enabled=${isEnabled}, text='${buttonText?.substring(0, 60)}...'`);\n        \n        if (isEnabled && buttonText) {\n          // Extract date key from button text\n          const dateKey = buttonText.replace('Press enter to navigate available slots', '').trim();\n          const cleanDateKey = dateKey.replace('is selected', '').trim();\n          \n          enabledButtons.push({ button, dateKey: cleanDateKey });\n          console.log(`‚úÖ Added enabled button ${i + 1}: ${cleanDateKey}`);\n        } else {\n          console.log(`‚è≠Ô∏è Button ${i + 1} skipped: ${!isEnabled ? 'disabled' : 'no text'}`);\n        }\n      } catch (error) {\n        console.log(`‚ùå Error checking button ${i + 1}: ${error}`);\n      }\n    }\n    \n    console.log(`üìä getAllEnabledDayButtons() complete: returning ${enabledButtons.length} enabled buttons`);\n    return enabledButtons;\n  }\n\n  private async getTimeSlotsForCurrentDay(page: any): Promise<string[]> {\n    const timeSlotSelectors = [\n      'button:has-text(\"AM\")',\n      'button:has-text(\"PM\")',\n      '[data-test-id*=\"time\"]',\n      '[data-id=\"time-slot-button\"]'\n    ];\n    \n    let timeSlotElements = [];\n    for (const selector of timeSlotSelectors) {\n      try {\n        const elements = await page.$$(selector);\n        if (elements.length > 0) {\n          timeSlotElements = elements;\n          break;\n        }\n      } catch (error) {\n        continue;\n      }\n    }\n    \n    const timeSlots = await Promise.all(\n      timeSlotElements.map(async (slot: any) => await slot.textContent())\n    );\n    \n    return timeSlots.filter(slot => slot).map(slot => slot.trim());\n  }\n\n  private async getCurrentWeekSlots(page: any): Promise<Array<{ date: string; slots: string[] }>> {\n    const weekSlots: Array<{ date: string; slots: string[] }> = [];\n    \n    // Wait for day buttons to be visible with multiple possible selectors\n    const dayButtonSelectors = [\n      'button[data-test-id*=\"days:\"]',\n      'button:has-text(\"Monday\")',\n      'button:has-text(\"Tuesday\")',\n      'button:has-text(\"Wednesday\")',\n      'button:has-text(\"Thursday\")',\n      'button:has-text(\"Friday\")',\n      'button:has-text(\"Saturday\")',\n      'button:has-text(\"Sunday\")',\n      '[data-test-id*=\"day\"]',\n      '[data-id=\"calendar-day-button\"]'\n    ];\n    \n    let dayButtonsFound = false;\n    for (const selector of dayButtonSelectors) {\n      try {\n        await page.waitForSelector(selector, { timeout: 5000 }); // Increased from 1000ms to 5000ms\n        dayButtonsFound = true;\n        break;\n      } catch (error) {\n        continue;\n      }\n    }\n    \n    if (!dayButtonsFound) {\n      console.log(\"‚ùå No day buttons found\");\n      return weekSlots;\n    }\n    \n    await page.waitForTimeout(500); // Increased from 100ms to 500ms\n\n    // Find all day buttons using multiple selectors\n    let dayButtons = [];\n    for (const selector of dayButtonSelectors) {\n      try {\n        const buttons = await page.$$(selector);\n        if (buttons.length > 0) {\n          dayButtons = buttons;\n          console.log(`üîç Found ${dayButtons.length} day buttons using selector: ${selector}`);\n          break;\n        }\n      } catch (error) {\n        console.log(`‚ùå Selector failed: ${selector} - ${error}`);\n        continue;\n      }\n    }\n    \n    if (dayButtons.length === 0) {\n      console.log(\"‚ùå No day buttons found with any selector\");\n      return weekSlots;\n    }\n    \n    const enabledButtons = [];\n    console.log(`üîç Checking ${dayButtons.length} day buttons for enabled status...`);\n    \n    for (let i = 0; i < dayButtons.length; i++) {\n      try {\n        const button = dayButtons[i];\n        const isEnabled = await button.isEnabled();\n        const buttonText = await button.textContent();\n        const isSelected = buttonText?.includes('is selected') || false;\n        console.log(`üìÖ Button ${i + 1}: '${buttonText?.substring(0, 50)}...' (enabled: ${isEnabled}, selected: ${isSelected})`);\n        if (isEnabled) {\n          enabledButtons.push({ button, isSelected });\n          console.log(`‚úÖ Added enabled button ${i + 1} to processing list`);\n        } else {\n          console.log(`‚ùå Button ${i + 1} is disabled, skipping`);\n        }\n      } catch (error) {\n        console.log(`‚ùå Error checking button ${i + 1}: ${error}`);\n        continue;\n      }\n    }\n    \n    console.log(`üìä Total enabled buttons found: ${enabledButtons.length}`);\n    \n    console.log(`üöÄ Processing ${enabledButtons.length} enabled day buttons...`);\n\n    for (let i = 0; i < enabledButtons.length; i++) {\n      try {\n        const { button, isSelected } = enabledButtons[i];\n        \n        // Always click the button to select it and get its slots\n        console.log(`üñ±Ô∏è Clicking day button ${i + 1} (selected: ${isSelected})`);\n        await button.click();\n        await page.waitForTimeout(1000); // Wait for slots to load\n        \n        // Get the selected date information from the clicked button\n        let dateText = \"Unknown Date\";\n        try {\n          const buttonText = await button.textContent();\n          if (buttonText) {\n            // Extract date from button text like \"Monday 27th October Press enter to navigate available slots Mon 27 Oct\"\n            dateText = buttonText.replace('Press enter to navigate available slots', '').trim();\n            dateText = dateText.replace('is selected', '').trim();\n          }\n        } catch (error) {\n          console.log(`‚ùå Error getting date from button: ${error}`);\n        }\n        \n        // Get time slots with multiple possible selectors\n        const timeSlotSelectors = [\n          'button:has-text(\"AM\")',\n          'button:has-text(\"PM\")',\n          '[data-test-id*=\"time\"]',\n          '[data-id=\"time-slot-button\"]'\n        ];\n        \n        let timeSlotElements = [];\n        for (const selector of timeSlotSelectors) {\n          try {\n            const elements = await page.$$(selector);\n            if (elements.length > 0) {\n              timeSlotElements = elements;\n              break;\n            }\n          } catch (error) {\n            continue;\n          }\n        }\n        \n        const timeSlots = await Promise.all(\n          timeSlotElements.map(async (slot: any) => await slot.textContent())\n        );\n        \n        if (timeSlots.length > 0) {\n          weekSlots.push({\n            date: dateText,\n            slots: timeSlots.filter(slot => slot).map(slot => slot.trim())\n          });\n          console.log(`‚úÖ Found ${timeSlots.length} slots for ${dateText}`);\n        } else {\n          console.log(`‚ö†Ô∏è No slots found for ${dateText}`);\n        }\n        \n        await page.waitForTimeout(500); // Wait between button clicks\n      } catch (error) {\n        console.log(`‚ùå Error processing button ${i + 1}: ${error}`);\n        continue;\n      }\n    }\n\n    return weekSlots;\n  }\n\n  private async navigateToNextWeek(page: any): Promise<boolean> {\n    console.log(\"üîç Looking for Next Week button...\");\n    \n    try {\n      // Use getByRole which is more reliable than $ selector\n      console.log(`üîç Trying getByRole('button', { name: 'Next Week' })...`);\n      const nextWeekButton = page.getByRole('button', { name: 'Next Week' });\n      const isEnabled = await nextWeekButton.isEnabled();\n      console.log(`üìÖ Next week button found: enabled=${isEnabled}`);\n      \n      if (isEnabled) {\n        console.log(`‚û°Ô∏è Clicking next week button...`);\n        await nextWeekButton.click();\n        console.log(\"‚úÖ Successfully clicked next week button\");\n        \n        // Wait longer for calendar to fully update with new dates\n        await page.waitForTimeout(3000); // Increased to 3 seconds\n        console.log(\"‚è≥ Completed 3-second wait\");\n        \n        // Wait for calendar to update with multiple possible selectors\n        const calendarSelectors = [\n          'button[data-test-id*=\"days:\"]',\n          'button:has-text(\"Monday\")',\n          'button:has-text(\"Tuesday\")',\n          'button:has-text(\"Wednesday\")'\n        ];\n        \n        let calendarUpdated = false;\n        for (const calSelector of calendarSelectors) {\n          try {\n            await page.waitForSelector(calSelector, { timeout: 3000 });\n            calendarUpdated = true;\n            console.log(`‚úÖ Calendar updated verified with selector: ${calSelector}`);\n            break;\n          } catch (error) {\n            console.log(`‚ùå Calendar update verification failed with selector: ${calSelector}`);\n            continue;\n          }\n        }\n        \n        if (calendarUpdated) {\n          console.log(\"‚úÖ Successfully moved to next week\");\n          await page.waitForTimeout(1000); // Additional wait for calendar to stabilize\n          return true;\n        } else {\n          console.log(\"‚ö†Ô∏è Calendar update verification failed - but continuing anyway\");\n          await page.waitForTimeout(1000);\n          return true; // Return true anyway to continue the loop\n        }\n      } else {\n        console.log(`‚ùå Next week button is disabled`);\n        return false;\n      }\n    } catch (error) {\n      console.log(`‚ùå Error finding/clicking Next Week button: ${error}`);\n      return false;\n    }\n  }\n}\n\n","import { NextRequest, NextResponse } from 'next/server';\nimport { ChiliPiperScraper } from '@/lib/scraper';\n\n// Production API keys for Chili Piper Slot Scraper\nconst VALID_API_KEYS = [\n  'cp_live_abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567',  // vendor_1\n  'cp_live_xyz789uvw456rst123qpo098nml765kji432hgf109edc876bca543',  // vendor_2  \n  'cp_live_internal_team_key_2024_secure_123456789abcdef',           // internal_team\n  'cp_live_demo_client_key_2024_secure_987654321fedcba'              // demo_client\n];\n\nfunction validateApiKey(authHeader: string): boolean {\n  if (!authHeader.startsWith('Bearer ')) {\n    return false;\n  }\n  \n  const token = authHeader.substring(7);\n  return VALID_API_KEYS.includes(token);\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('üîç Get-Slots API Debug - Request received');\n    \n    // Check authentication\n    const authHeader = request.headers.get('Authorization') || '';\n    console.log(`üîç Auth header: ${authHeader.substring(0, 20)}...`);\n    \n    if (!validateApiKey(authHeader)) {\n      console.log('‚ùå Authentication failed');\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Unauthorized',\n          message: 'Invalid or missing API key. Please provide a valid Bearer token.',\n          usage: {\n            example: 'Authorization: Bearer your-api-key-here'\n          }\n        },\n        { status: 401 }\n      );\n    }\n    \n    console.log('‚úÖ Authentication successful');\n    \n    // Parse request body\n    const body = await request.json();\n    console.log(`‚úÖ Parsed data:`, body);\n    \n    // Validate required fields\n    const requiredFields = ['first_name', 'last_name', 'email', 'phone'];\n    const missingFields = requiredFields.filter(field => !body[field]);\n    \n    if (missingFields.length > 0) {\n      console.log(`‚ùå Missing required fields: ${missingFields.join(', ')}`);\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Missing required fields',\n          message: `The following fields are required: ${missingFields.join(', ')}`\n        },\n        { status: 400 }\n      );\n    }\n    \n        console.log('üîç Starting scraping process...');\n        \n        // Run the scraping\n        const scraper = new ChiliPiperScraper();\n        const result = await scraper.scrapeSlots(\n          body.first_name,\n          body.last_name,\n          body.email,\n          body.phone\n        );\n        \n        if (!result.success) {\n          console.log(`‚ùå Scraping failed: ${result.error}`);\n          return NextResponse.json(\n            {\n              success: false,\n              error: 'Scraping failed',\n              message: result.error\n            },\n            { status: 500 }\n          );\n        }\n        \n        console.log('‚úÖ Scraping completed successfully');\n        console.log(`üìä Result: ${result.data?.total_days} days, ${result.data?.total_slots} slots`);\n        \n        return NextResponse.json(result);\n    \n  } catch (error) {\n    console.error('‚ùå API error:', error);\n    \n    if (error instanceof SyntaxError) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Invalid JSON',\n          message: 'Request body must be valid JSON'\n        },\n        { status: 400 }\n      );\n    }\n    \n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Internal Server Error',\n        message: error instanceof Error ? error.message : 'Unknown error occurred'\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function OPTIONS(request: NextRequest) {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n","import {\n  AppRouteRouteModule,\n  type AppRouteRouteHandlerContext,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport { addRequestMeta, getRequestMeta } from '../../server/request-meta'\nimport { getTracer, type Span, SpanKind } from '../../server/lib/trace/tracer'\nimport { setReferenceManifestsSingleton } from '../../server/app-render/encryption-utils'\nimport { createServerModuleMap } from '../../server/app-render/action-utils'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { NodeNextRequest, NodeNextResponse } from '../../server/base-http/node'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { sendResponse } from '../../server/send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../../server/web/utils'\nimport { getCacheControlHeader } from '../../server/lib/cache-control'\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from '../../lib/constants'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport {\n  CachedRouteKind,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n) {\n  if (routeModule.isDev) {\n    addRequestMeta(req, 'devRequestTimingInternalsEnd', process.hrtime.bigint())\n  }\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    params,\n    nextConfig,\n    parsedUrl,\n    isDraftMode,\n    prerenderManifest,\n    routerServerContext,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    resolvedPathname,\n    clientReferenceManifest,\n    serverActionsManifest,\n  } = prepareResult\n\n  const normalizedSrcPage = normalizeAppPath(srcPage)\n\n  let isIsr = Boolean(\n    prerenderManifest.dynamicRoutes[normalizedSrcPage] ||\n      prerenderManifest.routes[resolvedPathname]\n  )\n\n  const render404 = async () => {\n    // TODO: should route-module itself handle rendering the 404\n    if (routerServerContext?.render404) {\n      await routerServerContext.render404(req, res, parsedUrl, false)\n    } else {\n      res.end('This page could not be found')\n    }\n    return null\n  }\n\n  if (isIsr && !isDraftMode) {\n    const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname])\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        if (nextConfig.experimental.adapterPath) {\n          return await render404()\n        }\n        throw new NoFallbackError()\n      }\n    }\n  }\n\n  let cacheKey: string | null = null\n\n  if (isIsr && !routeModule.isDev && !isDraftMode) {\n    cacheKey = resolvedPathname\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  const supportsDynamicResponse: boolean =\n    // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true ||\n    // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr\n\n  // This is a revalidation request if the request is for a static\n  // page and it is not being resumed from a postponed render and\n  // it is not a dynamic RSC request then it is a revalidation\n  // request.\n  const isStaticGeneration = isIsr && !supportsDynamicResponse\n\n  // Before rendering (which initializes component tree modules), we have to\n  // set the reference manifests to our global store so Server Action's\n  // encryption util can access to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page: srcPage,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const method = req.method || 'GET'\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest,\n    renderOpts: {\n      experimental: {\n        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n      },\n      cacheComponents: Boolean(nextConfig.cacheComponents),\n      supportsDynamicResponse,\n      incrementalCache: getRequestMeta(req, 'incrementalCache'),\n      cacheLifeProfiles: nextConfig.cacheLife,\n      waitUntil: ctx.waitUntil,\n      onClose: (cb) => {\n        res.on('close', cb)\n      },\n      onAfterTaskError: undefined,\n      onInstrumentationRequestError: (error, _request, errorContext) =>\n        routeModule.onRequestError(\n          req,\n          error,\n          errorContext,\n          routerServerContext\n        ),\n    },\n    sharedContext: {\n      buildId,\n    },\n  }\n  const nodeNextReq = new NodeNextRequest(req)\n  const nodeNextRes = new NodeNextResponse(res)\n\n  const nextReq = NextRequestAdapter.fromNodeNextRequest(\n    nodeNextReq,\n    signalFromNodeResponse(res)\n  )\n\n  try {\n    const invokeRouteModule = async (span?: Span) => {\n      return routeModule.handle(nextReq, context).finally(() => {\n        if (!span) return\n\n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'next.rsc': false,\n        })\n\n        const rootSpanAttributes = tracer.getRootSpanAttributes()\n        // We were unable to get attributes, probably OTEL is not enabled\n        if (!rootSpanAttributes) {\n          return\n        }\n\n        if (\n          rootSpanAttributes.get('next.span_type') !==\n          BaseServerSpan.handleRequest\n        ) {\n          console.warn(\n            `Unexpected root span type '${rootSpanAttributes.get(\n              'next.span_type'\n            )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n          )\n          return\n        }\n\n        const route = rootSpanAttributes.get('next.route')\n        if (route) {\n          const name = `${method} ${route}`\n\n          span.setAttributes({\n            'next.route': route,\n            'http.route': route,\n            'next.span_name': name,\n          })\n          span.updateName(name)\n        } else {\n          span.updateName(`${method} ${srcPage}`)\n        }\n      })\n    }\n    const isMinimalMode = Boolean(\n      process.env.MINIMAL_MODE || getRequestMeta(req, 'minimalMode')\n    )\n\n    const handleResponse = async (currentSpan?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        try {\n          if (\n            !isMinimalMode &&\n            isOnDemandRevalidate &&\n            revalidateOnlyGenerated &&\n            !previousCacheEntry\n          ) {\n            res.statusCode = 404\n            // on-demand revalidate always sets this header\n            res.setHeader('x-nextjs-cache', 'REVALIDATED')\n            res.end('This page could not be found')\n            return null\n          }\n\n          const response = await invokeRouteModule(currentSpan)\n\n          ;(req as any).fetchMetrics = (context.renderOpts as any).fetchMetrics\n          let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n          // Attempt using provided waitUntil if available\n          // if it's not we fallback to sendResponse's handling\n          if (pendingWaitUntil) {\n            if (ctx.waitUntil) {\n              ctx.waitUntil(pendingWaitUntil)\n              pendingWaitUntil = undefined\n            }\n          }\n          const cacheTags = context.renderOpts.collectedTags\n\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isIsr) {\n            const blob = await response.blob()\n\n            // Copy the headers from the response.\n            const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n            if (cacheTags) {\n              headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n            }\n\n            if (!headers['content-type'] && blob.type) {\n              headers['content-type'] = blob.type\n            }\n\n            const revalidate =\n              typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n              context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                ? false\n                : context.renderOpts.collectedRevalidate\n\n            const expire =\n              typeof context.renderOpts.collectedExpire === 'undefined' ||\n              context.renderOpts.collectedExpire >= INFINITE_CACHE\n                ? undefined\n                : context.renderOpts.collectedExpire\n\n            // Create the cache entry for the response.\n            const cacheEntry: ResponseCacheEntry = {\n              value: {\n                kind: CachedRouteKind.APP_ROUTE,\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers,\n              },\n              cacheControl: { revalidate, expire },\n            }\n\n            return cacheEntry\n          } else {\n            // send response without caching if not ISR\n            await sendResponse(\n              nodeNextReq,\n              nodeNextRes,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          }\n        } catch (err) {\n          // if this is a background revalidate we need to report\n          // the request error here as it won't be bubbled\n          if (previousCacheEntry?.isStale) {\n            await routeModule.onRequestError(\n              req,\n              err,\n              {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                  isStaticGeneration,\n                  isOnDemandRevalidate,\n                }),\n              },\n              routerServerContext\n            )\n          }\n          throw err\n        }\n      }\n\n      const cacheEntry = await routeModule.handleResponse({\n        req,\n        nextConfig,\n        cacheKey,\n        routeKind: RouteKind.APP_ROUTE,\n        isFallback: false,\n        prerenderManifest,\n        isRoutePPREnabled: false,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        responseGenerator,\n        waitUntil: ctx.waitUntil,\n        isMinimalMode,\n      })\n\n      // we don't create a cacheEntry for ISR\n      if (!isIsr) {\n        return null\n      }\n\n      if (cacheEntry?.value?.kind !== CachedRouteKind.APP_ROUTE) {\n        throw new Error(\n          `Invariant: app-route received invalid cache entry ${cacheEntry?.value?.kind}`\n        )\n      }\n\n      if (!isMinimalMode) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers)\n\n      if (!(isMinimalMode && isIsr)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        nodeNextReq,\n        nodeNextRes,\n        // @ts-expect-error - Argument of type 'Buffer<ArrayBufferLike>' is not assignable to parameter of type 'BodyInit | null | undefined'.\n        new Response(cacheEntry.value.body, {\n          headers,\n          status: cacheEntry.value.status || 200,\n        })\n      )\n      return null\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${srcPage}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    if (!(err instanceof NoFallbackError)) {\n      await routeModule.onRequestError(req, err, {\n        routerKind: 'App Router',\n        routePath: normalizedSrcPage,\n        routeType: 'route',\n        revalidateReason: getRevalidateReason({\n          isStaticGeneration,\n          isOnDemandRevalidate,\n        }),\n      })\n    }\n\n    // rethrow so that we can handle serving error page\n\n    // If this is during static generation, throw the error again.\n    if (isIsr) throw err\n\n    // Otherwise, send a 500 response.\n    await sendResponse(\n      nodeNextReq,\n      nodeNextRes,\n      new Response(null, { status: 500 })\n    )\n    return null\n  }\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","addRequestMeta","getRequestMeta","getTracer","SpanKind","setReferenceManifestsSingleton","createServerModuleMap","normalizeAppPath","NodeNextRequest","NodeNextResponse","NextRequestAdapter","signalFromNodeResponse","BaseServerSpan","getRevalidateReason","sendResponse","fromNodeOutgoingHttpHeaders","toNodeOutgoingHttpHeaders","getCacheControlHeader","INFINITE_CACHE","NEXT_CACHE_TAGS_HEADER","NoFallbackError","CachedRouteKind","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","relativeProjectDir","__NEXT_RELATIVE_PROJECT_DIR","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks","handler","req","res","ctx","isDev","hrtime","bigint","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","params","nextConfig","parsedUrl","isDraftMode","prerenderManifest","routerServerContext","isOnDemandRevalidate","revalidateOnlyGenerated","resolvedPathname","clientReferenceManifest","serverActionsManifest","normalizedSrcPage","isIsr","Boolean","dynamicRoutes","routes","render404","isPrerendered","prerenderInfo","fallback","experimental","adapterPath","cacheKey","supportsDynamicResponse","isStaticGeneration","serverModuleMap","method","tracer","activeSpan","getActiveScopeSpan","context","renderOpts","authInterrupts","cacheComponents","incrementalCache","cacheLifeProfiles","cacheLife","onClose","cb","on","onAfterTaskError","undefined","onInstrumentationRequestError","error","_request","errorContext","onRequestError","sharedContext","nodeNextReq","nodeNextRes","nextReq","fromNodeNextRequest","invokeRouteModule","span","handle","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","isMinimalMode","MINIMAL_MODE","handleResponse","currentSpan","cacheEntry","responseGenerator","previousCacheEntry","setHeader","response","fetchMetrics","pendingWaitUntil","cacheTags","collectedTags","blob","headers","type","revalidate","collectedRevalidate","expire","collectedExpire","value","status","body","Buffer","from","arrayBuffer","cacheControl","err","isStale","routerKind","routePath","routeType","revalidateReason","routeKind","isFallback","isRoutePPREnabled","Error","isMiss","delete","getHeader","set","Response","withPropagatedContext","trace","spanName","SERVER","attributes","url"],"mappings":"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","ignoreList":[2]}